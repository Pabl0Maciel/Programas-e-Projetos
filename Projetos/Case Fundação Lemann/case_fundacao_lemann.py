# -*- coding: utf-8 -*-
"""Case_Fundacao_Lemann.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v_v2wBqzigh20WzomVMo72Yv40CV8pjH

# **Case: Análise de Dados Educacionais - Censo Escolar**

**Observações:**
- Recomenda-se assistir ao vídeo antes de explorar este notebook e o arquivo do Power BI;
- Os comentário acerca dos trechos de códigos estarão imediatamente acima deles;
- Foi utilizado o dataset completo do Censo Escolar sobre as escolas (5.68GB), a fim de propor uma análise mais completa;
- Os gráficos mostrados estão em sua maioria no arquivo disponibilizado na entrega do case;
- Não é recomendado reiniciar o ambiente de execução, devido ao longo tempo para download do dataset.

## **Parte 1: Acessando os dados**

Instalação da biblioteca usada para obtenção do dataset a ser usado
"""

!pip install basedosdados==2.0.0b16

"""## **Parte 2: Definindo os temas da análise**

Neste case tentaremos analisar:
- Infraestrutura das escolas;
- Saneamento básico;
- Quantidade de matriculas X Quantidade de Turmas (visando estimar o número de alunos por turma);
- Quantidade de salas usadas (identificar se existem salas menos usadas e o motivo disso);
- Equipamentos disponíveis nas escolas (computadores, impressoras, ...);
- Quantidade de profissionais por área (enfermeiros, bombeiros, psicólogos, ...);
- Quantidade de matrículas por idade, cor, raça e gênero;

### **Importando os dados e criando os dataframes**

Importando a biblioteca Pandas para manipular os dados
"""

import pandas as pd

"""Dados sobre a infraestrutura das escolas"""

df_infra = pd.read_csv('/content/drive/MyDrive/bq-results-20250120-200245-1737403427421/infraestrutura.csv')
df_infra.head()

"""Dados sobre o saneamento das escolas"""

df_saneamento = pd.read_csv('/content/drive/MyDrive/bq-results-20250120-200807-1737403720512/saneamento.csv')
df_saneamento.head()

"""Dados sobre a quantidade de matriculas e turmas das escolas"""

df_matricula_X_turma = pd.read_csv("/content/drive/MyDrive/bq-results-20250120-201226-1737403972860/matriculaXturma.csv")
df_matricula_X_turma.head()

"""Dados sobre o uso das salas das escolas"""

df_salas = pd.read_csv('/content/drive/MyDrive/bq-results-20250120-201447-1737404837916/salas.csv')
df_salas.head()

"""Dados sobre os equipamentos das escolas"""

df_equipamentos = pd.read_csv('/content/drive/MyDrive/bq-results-20250120-203338-1737405308023/equipamentos.csv')
df_equipamentos.head()

"""Dados sobre os profissionais das escolas"""

df_profissionais = pd.read_csv('/content/drive/MyDrive/bq-results-20250120-204125-1737405760184/profissionais.csv')
df_profissionais.head()

"""Dados sobre os alunos das escolas"""

df_alunos = pd.read_csv('/content/drive/MyDrive/bq-results-20250120-190807-1737400150311/alunos.csv')
df_alunos.head()

"""## **Parte 3: Limpeza e descrição dos dados**

### **Infraestrutura**

O dataframe sobre a infraestrutura das escolas possui 3.842.919 linhas e 59 colunas
"""

df_infra.info()

"""Aqui nós vemos que a grande maioria dos dados estão vazios, com várias colunas contendo até 80% de seus campos sem informação.

Para tornar este dataset útil, poderíamos treinar um modelo de machine learning com o intuito de prever o valor dos campos ausentes. Entretanto, por motivos de alta complexidade para aplicar esta técnica não iremos mais usar esse dataframe.

O que podemos extrair disso tudo é somente o descomprometimento ao coletar os dados.
"""

df_infra.isna().sum()

"""### **Saneamento**

O dataframe de saneamento possui 3.842.919 linhas e 36 colunas.

As colunas de ano, sigla_uf, id_municipio, id_municipio_nome, id_escola e rede servem para identificar as escolas e nos acompanharão em todos dataframes deste notebook.
"""

df_saneamento.info()

"""Aqui vemos mais um caso com o número de valores ausentes extremamente alto.

Porém, diferente do dataframe anterior, este possui 4 principais informações: água, esgoto, energia e lixo. Dito isso, observamos que as colunas estão subdivididas em instâncias desses quatro assuntos.

O que faremos aqui é simplesmente direcionar a análise àquelas colunas em que os valores ausente não ultrapassem 50% do total de linhas.
"""

df_saneamento.isna().sum()

"""Selecionando colunas que atendem ao requisito"""

colunas_selecionadas = [
    'ano',
    'sigla_uf',
    'id_municipio',
    'id_municipio_nome',
    'id_escola',
    'rede',
    'agua_filtrada',
    'agua_rede_publica',
    'agua_poco_artesiano',
    'agua_cacimba',
    'agua_fonte_rio',
    'agua_inexistente',
    'energia_rede_publica',
    'energia_gerador',
    'energia_inexistente',
    'esgoto_rede_publica',
    'esgoto_fossa',
    'esgoto_inexistente',
    'lixo_servico_coleta',
    'lixo_queima',
    'lixo_enterrado'
]
df_saneamento = df_saneamento[colunas_selecionadas]

"""Observando se o dataframe está com as colunas selecionadas"""

df_saneamento.info()

"""Averiguando novamente os valores ausentes"""

df_saneamento.isna().sum()

"""Aqui entramos novamente na discussão sobre o que fazer com os valores ausentes.

Poderíamos usar machine learning para encontrar padrões e tentar adivinhar o valor dos campos vazios. Entretanto, por questões de praticidade do case e do número de valores ausentes das colunas representarem, em suma maioria, 16% do total de linhas, nós vamos simplesmente excluí-los.

Gosto de ressaltar que essa, de fato, não é a melhor opção viável, mas é a mais prática para a análise.

Depois das exclusões, vemos que o total de linhas caiu para 2.314.096, ainda uma quantidade excelente para análise.
"""

df_saneamento = df_saneamento.dropna()
df_saneamento.info()

"""Certificando que não existem mais valores ausentes."""

df_saneamento.isna().sum()

"""Salvando o arquivo para usar no Power Bi posteriormente.


"""

df_saneamento.to_csv('/content/drive/MyDrive/Datasets_Lemann/saneamento.csv')

"""### **Matrículas X Turmas**

O dataframe possui 3.842.919 linhas e 24 colunas.

Diferente dos outros dataframes, em que os dados eram Sim ou Não (1 ou 0), neste aqui nós temos números representando quantidades.
"""

df_matricula_X_turma.info()

"""Novamente diversos valores ausentes, algumas colunas como as que se referem a quantidade de turmas no período integral estão em situação crítica, com 3.664.443 (95,36%) de seus campos como ausentes.

Vamos selecionar as colunas que estão mais completas para realizar as análises e descartar as outras.
"""

df_matricula_X_turma.isna().sum()

"""Excluindo colunas indesejadas."""

colunas_excluir = [
    'quantidade_turma_ead',
    'quantidade_turma_noturno',
    'quantidade_turma_diurno',
    'quantidade_turma_medio_integral',
    'quantidade_turma_fundamental_integral',
    'quantidade_turma_infantil_integral'
    ]

df_matricula_X_turma = df_matricula_X_turma[df_matricula_X_turma.columns.difference(colunas_excluir)]

"""Conferindo"""

df_matricula_X_turma.info()

"""Ainda restam os valores ausentes. Porém, como este dataframe possuí números representando quantidades, nós podemos aplicar outra técnica para preencher esses valores.

A técnica consiste em nada mais do que preenche-los com a sua média. Para isso, usamos o método describe para calcular a média e em seguida usamos o fillna para preencher.
"""

df_matricula_X_turma.isna().sum()

"""Calculando a média e preenchendo.

Vemos que não existem mais valores ausentes.
"""

medias = round(df_matricula_X_turma.describe().loc['mean'])
df_matricula_X_turma = df_matricula_X_turma.fillna(medias)
df_matricula_X_turma.isna().sum()

"""Aqui podemos ver com mais detalhes as estatísticas do método describe.

Diversas colunas possuem um alto desvio padrão (std), o que pode revelar uma inconsistência nos dados ou regiões com muito mais matrículas e turmas do que outras.

Outra informação para ficar alerta seria a de quantidade de matricula EAD, que possui uma média de 2 matriculas e um desvio padrão de quase 100. Isso revela que a maioria das escolas possuem 0 matriculas EAD, enquanto algumas minorias apresentam um número bem maior.

Essas informações serão melhor observadas posteriormente em gráficos.

"""

colunas_omitidas = ['ano', 'id_municipio', 'id_escola']
df_matricula_X_turma[df_matricula_X_turma.columns.difference(colunas_omitidas)].describe()

"""Salvando o arquivo para usar no Power Bi posteriormente.




"""

df_matricula_X_turma.to_csv('/content/drive/MyDrive/Datasets_Lemann/matricula_X_turma.csv')

"""### **Salas**

Esse dataframe possui 3.842.919 linhas e 12 colunas.

Seus dados são números que representam quantidades, então poderemos ver algumas estatísticas sobre eles.
"""

df_salas.info()

"""Aqui nós só conseguiremos usar duas colunas: quantidade_sala_existente e quantidade_sala_utilizada.

Por mais que seja possível calcular média de todas as colunas, as não citadas acima possuem um valor muito baixo de dados preenchidos e seria arriscado preencher os ausentes somente com base neles (904.107 não ausentes X 2.938.812 ausentes).

Portanto, vamos seguir com as duas colunas escolhidas.
"""

df_salas.isna().sum()

colunas_excluir = [
    'quantidade_sala_utilizada_dentro',
    'quantidade_sala_utilizada_fora',
    'quantidade_sala_utilizada_climatizada',
    'quantidade_sala_utilizada_acessivel'
    ]

df_salas = df_salas[df_salas.columns.difference(colunas_excluir)]
df_salas.info()

df_salas.isna().sum()

medias = round(df_salas.describe().loc['mean'])
df_salas = df_salas.fillna(medias)
df_salas.isna().sum()

"""Mesmo preenchendo os valores ausentes, nos deparamos com outro erro muito comum em datasets: outliers.

Nas descrições abaixo, conseguimos ver que o número máximo de salas utilizadas é de 9999 enquanto o de salas existentes é de 4300. Isso nos revela que esse '9999' se trata de um outlier/inconsistência nos dados.

Além disso, essa descoberta também nos alerta para os casos em que o número de salas utilizadas é maior que o de salas existentes. Esses cenários são considerados inconsistências e devemos eliminar para continuar com a análise.
"""

df_salas.describe()

"""Identificando onde estão essas inconsistências.

São 605.271 linhas que devem ser eliminadas.
"""

outliers = df_salas.loc[df_salas['quantidade_sala_utilizada'] > df_salas['quantidade_sala_existente']]
print(outliers)

"""Excluindo os outliers.

Vemos que depois dessa alteração os valores parecem mais lógicos e adequados para prosseguirmos com as análises.
"""

df_salas = df_salas.drop(outliers.index)
df_salas.describe()

df_salas.to_csv('/content/drive/MyDrive/Datasets_Lemann/salas.csv')

"""### **Equipamentos**

O dataframe possui 3.842.919 linhas e 30 colunas.

Aqui há mistura entre Sim ou Não (1 ou 0) e números de quantidades.
"""

df_equipamentos.info()

"""Mais dados ausentes dificultando a análise, dessa vez a maioria estão relacionados as quantidades de equipamentos.

Vamos escolher as colunas mais viáveis para continuar o processo.
"""

df_equipamentos.isna().sum()

"""Escolhendo as colunas com menor número de valores ausentes"""

colunas_escolhidas = [
    'ano',
    'sigla_uf',
    'id_municipio',
    'id_municipio_nome',
    'id_escola',
    'rede',
    'equipamento_impressora',
    'equipamento_tv',
    'equipamento_retroprojetor',
    'quantidade_computador',
    'internet',
    'banda_larga'
]
df_equipamentos = df_equipamentos[colunas_escolhidas]
df_equipamentos.info()

"""Verificando os dados ausentes novamente.

A única varíavel númerica quantitativa que possui valores ausentes é a de quantidade_computador, então vamos aplicar a técnica de preencher esses valores com a média.
"""

df_equipamentos.isna().sum()

"""Calculando a média e preenchendo.

Para o restanto, como são variáveis categóricas e não iremos usar machine learning, nós vamos excluí-las.
"""

media = df_equipamentos['quantidade_computador'].mean(skipna=True)
df_equipamentos['quantidade_computador'] = df_equipamentos['quantidade_computador'].fillna(media)
df_equipamentos.isna().sum()

"""Exlcuindo elas, nos restaram 1.938.313 linhas para fazer a análise"""

df_equipamentos = df_equipamentos.dropna()
df_equipamentos.info()

"""Confirmando que não existem mais valores ausentes."""

df_equipamentos.isna().sum()

"""Salvando o arquivo para usar no Power Bi posteriormente.

"""

df_equipamentos.to_csv('/content/drive/MyDrive/Datasets_Lemann/equipamentos.csv')

"""### **Profissionais**

O dataframe possui 3.842.919 linhas e 42 colunas, novamente dividido entre Sim ou Não (1 ou 0) e variáveis numéricas quantitativas.
"""

df_profissionais.info()

"""Para infelicidade da nossa análise, encontramos aqui o dataframe com maior número de valores ausentes.

Usaremos somente 4 colunas: quantidade_funcionario, quantidade_docente_infantil, quantidade_docente_fundamental e quantidade_docente_medio.
"""

df_profissionais.isna().sum()

"""Selecionando as colunas."""

colunas_escolhidas = [
    'ano',
    'sigla_uf',
    'id_municipio',
    'id_municipio_nome',
    'id_escola',
    'rede',
    'quantidade_funcionario',
    'quantidade_docente_infantil',
    'quantidade_docente_fundamental',
    'quantidade_docente_medio'
]
df_profissionais = df_profissionais[colunas_escolhidas]
df_profissionais.info()

"""Verificando os valores ausentes.

Vamos preenche-los com a média de suas colunas.
"""

df_profissionais.isna().sum()

"""Preenchendo.

Não existem mais valores ausentes.
"""

medias = round(df_profissionais.describe().loc['mean'])
df_profissionais = df_profissionais.fillna(medias)
df_profissionais.isna().sum()

"""Feito o preenchimento, nos deparamos novamente com alguns outliers e incosistências.

O número máximo de funcionários é de 9999, o que não parece viável para uma escola.

A quantidade mínima de funcionário e docentes é mostrada como 0, significando que ou a escola não funciona ou se trata de uma anomalia.

Vamos corrigir esses problemas como anteriormente.
"""

df_profissionais.describe()

"""Encontrando duas linhas em que existem 0 funcionários ou 9999 funcionários."""

outliers = df_profissionais.loc[(df_profissionais['quantidade_funcionario'] == 9999) | (df_profissionais['quantidade_funcionario'] == 0)]
print(outliers)

"""Removendo essas linhas.

Analisando novamente as estatísticas, ainda vemos números altos de funcionários e que valem a pena serem observados melhor.
"""

df_profissionais = df_profissionais.drop(outliers.index)
df_profissionais.describe()

"""Analisando o ranking dos 20 maiores números de funcionários, percebemos que os valores altos ocorrem diversas vezes para serem considerados outliers ou inconsistências.

Uma hipótese é que esses valores podem ter sido multiplicados por 10 por algum motivo, mas o ideal nesse caso seria contactar a empresa para conferir essas informações caso seja de urgência para análise.
"""

df_ordenado = df_profissionais.sort_values(by='quantidade_funcionario', ascending=False)
df_ordenado.head(20)

"""Invertendo o ranking, observamos várias inconsistências onde o número de docentes é maior do que o de funcionários.

Dito isso, vamos procurar essas linhas e eliminá-las.
"""

df_ordenado = df_profissionais.sort_values(by='quantidade_funcionario', ascending=True)
df_ordenado.head(10)

"""Identificamos 782.350 linhas onde ocorrem esses erros e agora vamos eliminá-las."""

df_profissionais['quantidade_total_docente'] = df_profissionais['quantidade_docente_infantil'] + df_profissionais['quantidade_docente_fundamental'] + df_profissionais['quantidade_docente_medio']
inconsistencias = df_profissionais.loc[df_profissionais['quantidade_total_docente'] > df_profissionais['quantidade_funcionario']]
print(inconsistencias)

"""Ainda restaram 3.060.567 linhas para análise."""

df_profissionais = df_profissionais.drop(inconsistencias.index)
df_profissionais.info()

"""Vendo as 100.000 primeiras linhas, observamos escolas com no máximo 2 funcionários. Por mais que seja possível, isso prejudicaria nossa análise.

Então, para deixar os dados mais realistas nós vamos pegar as escolas que possuem pelo menos 10 funcionários.
"""

df_ordenado = df_profissionais.sort_values(by='quantidade_funcionario', ascending=True)
df_ordenado.head(100000)

"""2.700.009 linhas que atendem esse requisito."""

linhas_escolhidas = df_profissionais.loc[df_profissionais['quantidade_funcionario'] >= 10]
print(linhas_escolhidas)

"""Atualizando o dataframe com o filtro escolhido."""

df_profissionais = linhas_escolhidas
df_profissionais.info()

"""Exceto pelos altos números de funcionários, que não teremos como saber se estão certos ou não, o restante parece estar aceitável."""

df_profissionais.describe()

"""Confirmando a mudança com a visualização das 10 primeiras linhas."""

df_ordenado = df_profissionais.sort_values(by='quantidade_funcionario', ascending=True)
df_ordenado.head(10)

"""Salvando o arquivo para usar no Power Bi posteriormente.

"""

df_profissionais.to_csv('/content/drive/MyDrive/Datasets_Lemann/profissionais.csv')

"""### **Alunos**

O dataframe possui 3.842.919 linhas e 20 colunas. Todas são variáveis numéricas quantitativas.
"""

df_alunos.info()

"""Este é o melhor dataframe em questão de valores ausentes que nós vimos até agora, mas devemos sempre analisar com seriedade os dados para não deixar escapar possíveis erros.

Vamos preencher os ausentes com a média.
"""

df_alunos.isna().sum()

"""Calculando a média e preenchendo."""

medias = round(df_alunos.describe().loc['mean'])
df_alunos = df_alunos.fillna(medias)
df_alunos.isna().sum()

"""Vemos que a quantidade mínima de alunos pode ser 0, o que não faz sentido para nossa análise.

Como no caso anterior, vamos aplicar um filtro e selecionar as escolas com pelo menos 15 alunos no total.
"""

df_alunos.describe()

df_alunos['quantidade_aluno_matriculado'] = df_alunos['quantidade_matricula_feminino'] + df_alunos['quantidade_matricula_masculino'] + df_alunos['quantidade_matricula_nao_declarada']

"""Nos restaram 3.725.430 linhas, perdemos poucas informações que provavelmente eram inconsistêntes."""

linhas_escolhidas = df_alunos.loc[df_alunos['quantidade_aluno_matriculado'] >= 15]
print(linhas_escolhidas)

"""Atualizando o dataframe com o filtro."""

df_alunos = linhas_escolhidas

"""Analisando as 10 primeiras linhas, parecem corretas."""

df_ordenado = df_alunos.sort_values(by='quantidade_aluno_matriculado', ascending=True)
df_ordenado.head(10)

"""Vendo as 10 últimas também, aparentam estar certas."""

df_ordenado = df_alunos.sort_values(by='quantidade_aluno_matriculado', ascending=False)
df_ordenado.head(10)

"""Checando novamente, o dataframe parece estar pronto para proseguir na análise."""

df_alunos.describe()

"""Salvando o arquivo para usar no Power Bi posteriormente.

"""

df_alunos.to_csv('/content/drive/MyDrive/Datasets_Lemann/alunos.csv')

"""## **Parte 4: Visualizações**

Os gráficos abaixo foram criado pelo Power BI e o arquivo está em anexo junto com o envio do case.

Os insights gerados serão comentados acima de cada gráfico.

Ainda, quero ressaltar que todos os dashboards possuem filtros que permitem selecionar os estados, a rede escolar e o ano caso deseje fazer uma análise mais estreita.

Importando biblioteca para mostrar os prints dos dashboards.
"""

from IPython.display import Image, display

"""### **Saneamento Básico**

A primeira informação que podemos tirar é o número de escolas analisadas neste dashboard: 2.31 Milhões, de 2007 a 2018.

Complementando a informação, 2.04 milhões possuem água filtrada, enquanto 65 mil delas não possuem.

Partindo para os gráficos de colunas, temos acesso ao número de escolas em que o abastecimento de água e energia são feitos pela rede pública, além daquelas que possuem serviço de coleta de lixo.

Agora, uma informação de revela certa preocupância é a de 1.27 milhão não terem o esgoto feito pela rede pública, tendo que recorrer a outras opções de descarte como a fossa, retratada no dataset.

Aplicando os filtros de rede escolar, conseguimos identificar que a maioria das que não possuem esses serviços são as municipais e estaduais. Para exemplificar com dados numéricos, quando aplicamos o filtro de rede privada nós vemos que apenas 310 escolas não possuem abastecimento de água e as colunas que representam o informação de acesso aos serviços analisados no dashboard disparam.

Por outro lado, aplicando o filtro de rede municipal nós nos deparamos com 61 mil escolas que não possuem acesso a água. A colunas dos gráficos que representam o não acesso aos serviços estudados aumentam e diminuem a diferença entre acesso e não acesso.

Concluindo, vemos que a falta de acesso a água filtrada e tratamento do esgoto se da, na maioria das vezes, em escolas municipais e estaduais, revelando negligência dos órgãos públicos com elas.
"""

display(Image(filename='/content/drive/MyDrive/prints_lemann/saneamento_básico.png'))

"""### **Matricula X Turma**

Entrando nas matrículas e turmas, temos acesso a informações referente ao ensino infantil, fundamental e médio, além da modalidade de aula.

Observando o primeiro gráfico de linhas, conseguimos ver o crescimento da modalidade de ensino a distância. O primeiro 'boom' se deu em 2010, com a estabilidade da banda larga esse tipo de ensino foi possível e popularizado. Segundo os dados, outra explosão aconteceu de 2014 para 2015 e aumentou drasticamente o número de matrículas nessa modalidade. Depois, vemos que ela aumentou até continuar com poucas variações por ano nos dias de hoje, mas ainda fica abaixo das tradicionais como estudo presencial diurno e noturno.

Com o segundo gráfico de linhas, percebemos um baixo número de matrículas no ensino infantil até meados de 2013, quando o governo federal estabeleceu a obrigatoriedade de crianças a partir de 4 anos serem matriculadas. Após isso, vemos um aumento no número de matrículas desse ensino.

O alto número de matriculados no ensino fundamental contribui para o pensamento comum na socieade brasileira de pular o ensino infantil e começar somente no seguinte. Esses números se mantém relativamente constantes, significando que a maioria conclui essa etapa da educação básica.

Passando para o ensino médio, vemos que o número de matrículas diminuiu ao longo dos anos, revelando um possível abandono das aulas por parte dos alunos por diversos motivos.

Por fim, os cartões nos mostram a quantidade média de alunos por turma. No ensino infantil existem poucos alunos e mais turmas. No fundamental essa razão aumenta, o que mostra um crescimento do número de matrículas. Ademais, no ensino médio a razão aumenta ainda mais, em média 33 alunos por turma. Aplicando o filtro de rede municipal, a média vai para 42 alunos por turma, revelando uma baixa quantidade de turmas em relação ao número de alunos.

Concluindo, este dashboard nos permitiu ver o crescimento da modalidade de ensino a distância e inferir informações sobre a adesão dos estudantes aos ensinos.
"""

display(Image(filename='/content/drive/MyDrive/prints_lemann/matricula_X_turma.png'))

"""### **Salas**

Um dashboard relativamente simples, ele nos mostra informações sobre a utilização das salas nas escolas.

Vemos que existiram 236 milhões de salas ao longo do período de 2007 até 2023, sendo 209 milhões delas utilizada e 27 milhões não. Em média, 89% delas são utilizadas e 11% não.

O mais interessante desse dashboard é o gráfico de linhas, que nos mostra uma queda abrupta da média de salas usadas na transição de 2018 para 2019. Isso pode ser facilmente explicado pelo início da pandemia, que forçou os alunos a frequentarem a modalidade de ensino a distância. Então, não havia necessidade de manter tantas salas nesse período de reclusão.

Concluindo, ainda que pouco, as salas inutilizadas ainda estão presentes e podem ser usadas para melhorar a qualidade do ensino nas escolas. Ainda, vimos a presença da pandemia do Covid-19 afetando os dados.
"""

display(Image(filename='/content/drive/MyDrive/prints_lemann/salas.png'))

"""### **Equipamentos**

Passando para a parte de equipamentos, obtemos informações sobre a quantidade de computadores ao longo dos anos, número de escolas com e sem internet e também o número de escolas que possuem equipamentos como televisão, impressora e retroprojetor.

Começando com a internet, vemos que originalmente poucas escolas tinha acesso a essa ferramenta, mas que ao longo dos anos isso foi mudando. Os últimos dados que temos é do ano de 2018, em que não constam mais escolas sem internet (provavelmente algum erro de coleta de dados), mas até em 2017 existiam pouco mais de 60 mil escolas sem acesso a internet dentre um total de quase 2 milhões de escolas.

Analisando a média de computadores, identificamos uma crescência interrompida pelo ano de 2017, o que pode ter sido alguma política de redução de gastos públicos com a educação. Ainda, o número volta a crescer em 2018, último ano em que temos dados, e provavelmente continou até hoje.

Agora falando sobre os equipamentos em si, percebemos que boa parte das escolas possui televisão e impressora. O que chama mais atenção é que a maioria das escolas não possuem um retroprojetor, essencial para melhorar a qualidade dos materiais de estudo.

Concluindo, o acesso a internet e aos computadores nas escolas aumentou conforme os anos. Entretanto, equipamentos básicos como retroprojetor ainda estão em falta.
"""

display(Image(filename='/content/drive/MyDrive/prints_lemann/equipamentos.png'))

"""### **Profissionais**

Olhando agora os profissionais, temos acesso a quantidade deles por escola, assim como a de docentes de cada ensino.

Em primeiro lugar, nos deparamos com uma média de 35 profissionais por escola, dos quais 12 são docentes e 23 executam outras funções.

Direcionando o foco para os docentes, percebemos que a maioria é responsável pelo ensino fundamental (60%), enquanto o restante permanece distribuídos de forma equilibrada entre ensino infantil (25%) e médio (15%). Além disso, a quantidade deles se manteve relativamente estável ao longo dos anos, revelando que não teve nenhuma época de maior contratação de docentes.

Um detalhe importante seria o de que o número de professores no ensino médio é baixo, identificando uma falta de profissionais na área e uma possível negligência com a educação.

Concluindo, a maioria dos professores atuam no ensino fundamental, enquanto no ensino infantil e médio existem poucos que atuam.

Observação: devido ao alto número de valores ausentes referentes aos outros profissionais, não foi possível realizar uma análise sobre esses.
"""

display(Image(filename='/content/drive/MyDrive/prints_lemann/profissionais.png'))

"""### **Alunos**

Entrando no último dashboard criado, obtemos informações sobre cor e raça, faixa etária e sexo de alunos.

De inicío, notamos uma média de matrículas masculinas maior do que femininas, ainda que pouca.

Conseguimos identificar também a média de matrículas por cor e raça, sendo a maioria delas parda e branca. Enquanto isso, alunos que não declararam sua característica estão em 962 na média, prejudicando de certa forma a análise. Vale apontar também ao baixo número de alunos pretos matriculados, reforçando a desigualdade que ainda existe no país.

Olhando a distribuição por faixa etária, as duas com mais matrículas correspondem aos alunos que estão no ensino fundamental, reforçando o alto número de matrículas nesse ensino revelas em dashboards anteriores. O menor número de matrículas estão relacionadas ao ensino infantil, que, como visto anteriormente, é frequentemente ignorado pela sociedade.

Por fim, percebemos uma queda na média de matrículas ao longo dos anos. Essa situação é preocupante pois significa certo abandono da escola por parte dos alunos ou até mesmo falta de interesse das novas gerações pelos estudos.
"""

display(Image(filename='/content/drive/MyDrive/prints_lemann/alunos.png'))

"""### **Comentários finais**

As análises feitas foram, de certa, forma gerais. Seria possível fazer estudos mais estreitos localizando estados e anos em que tal variável ocorria com mais frequência.

Ainda, muitos dados dos datasets não foram possíveis de se avaliar devido ao alto número de valores ausentes e a optação de não utilização de machine learning para prever seus possíveis valores.

## **Parte 5: Incorpore IA**

Recursos de inteligência artificial foram usados durante todo o projeto, desde o acesso ao dados até a criação dos dashboards.

Em especial o uso do ChatGPT foi fundamental ao tirar dúvidas de códigos e auxiliar na montagem e análise dos dashboards. A conversa pode ser acessada clicando [aqui](https://chatgpt.com/share/679144e2-7f54-800f-a339-36da34b020ad).

Outra IA usada foi o Gemini. Utilizada dentro desse notebook para otimizar a construção de códigos ao identificar padrões e antecipar a escrita do usuário.

Ainda no âmbito de IA, o que poderia ser incorporado no projeto seria o uso de machine learning para prever e preencher os valores ausentes encontrados no dataset.

## **Parte 6: Proponha Melhorias**

Existem algumas melhorias que se pode fazer na estrutura do dataset para facilitar análises posteriores.

Por exemplo, os dados sobre os equipamentos estão divididos em duas colunas: equipamento_X (representando se possui ou não o equipamento X) e quantidade_equipamento_X (mostrando a quantidade do equipamento X). Uma maneira mais eficaz seria ter uma coluna de equipamentos, listando todas as opções, e outra com a quantidade desse equipamento. Ainda, para falar sobre os equipamentos de uma certa escola, deveria se repetir o id dela.

Em termos visuais, ficaria assim:
"""

data = {
    'id_escola' : [1, 1, 1, 1, 1, 1],
    'equipamentos' : ['impressora', 'tv', 'retroprojetor', 'computador', 'desktop', 'tablet'],
    'quantidade_equipamento' : [1, 2, 1, 3, 10, 6],
}

df_teste = pd.DataFrame(data)
df_teste.head(6)

"""Desse jeito, seria mais fácil de agregar os dados para usá-los em gráficos. Além disso, caso precise adicionair mais tipos de equipamentos futuramente, basta colocá-los na lista de equipamentos.

Para possíveis dúvidas quanto ao cadastro de outras escolas ou novos equipamentos, o processo seria assim:
"""

novos_dados = pd.DataFrame({
    'id_escola': [2, 2, 2],
    'equipamentos': ['projetor', 'notebook', 'scanner'],
    'quantidade_equipamento': [2, 5, 1]
})
df_teste = pd.concat([df_teste, novos_dados], ignore_index=True)
print(df_teste)

novos_equipamentos = pd.DataFrame({
    'id_escola': [1, 1],
    'equipamentos': ['quadro interativo', 'câmera'],
    'quantidade_equipamento': [1, 3]
})
df_teste = pd.concat([df_teste, novos_equipamentos], ignore_index=True)
print(df_teste)

"""Essas melhorias podem ser feitas em todo o dataset, otimizando e expandindo as análises.

Para a coleta dos dados, é só criar uma espécie de formulário que dê a opção de selecionar o id da escola, o equipamento e a quantidade.
"""
